<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lg.cns.ds.mapper.termMapper">

	<sql id="sqlSelectList">
        SELECT
			tb_term.request_id as requestId
			, tb_term.request_type as requestType
			, tb_term.request_status as requestStatus
			, grp1.name as requestStatusText
			, tb_term.regist_status as registStatus
			, grp3.name as registStatusText
			, tb_term.is_normal as isNormal
			, grp2.name as isNormalText
			, tb_term.username as username
			, users.firstname as firstname
			, tb_term.created_date as createdDate
			, tb_term.approved_date as approveDate
			, tb_term.term
			, tb_term.domain_id as domainId
			, tb_domain.domain as domainText
			, tb_domain.type as type
			, tb_domain.data_type as domainDataType
			, grp5.name as domainDataTypeText
			, tb_domain.data_length as domainDataLength
			, tb_term.word_decomposition_kor as wordDecompositionKor
			, tb_term.word_decomposition_eng as wordDecompositionEng
			, tb_term.definition as definition
			, tb_term.rejection_reason as rejectionReason
		FROM tb_term
		LEFT JOIN tb_common_dict AS grp1
			ON
			tb_term.request_status = grp1.grp_code AND grp1.grp_id = '1'
		LEFT JOIN tb_common_dict AS grp2
			ON
			tb_term.is_normal = grp2.grp_code AND grp2.grp_id = '2'
		LEFT JOIN tb_common_dict AS grp3
			ON
			tb_term.regist_status = grp3.grp_code AND grp3.grp_id = '3'
		LEFT JOIN tb_domain
			ON
			tb_term.domain_id = tb_domain.request_id
		LEFT JOIN tb_common_dict AS grp5
			ON
			tb_domain.data_type = grp5.grp_code AND grp5.grp_id = '5'
		LEFT JOIN users
			ON
			tb_term.username = users.username
    </sql>
    
	 <sql id="sqlSelectListConditionApproved">
        <where>
			tb_term.request_status in ('3')
			<if test="requester != null and requester != ''">
				AND (LOWER(tb_term.username) = LOWER(#{requester}) OR LOWER(users.firstname) = LOWER(#{requester}))
			</if>
			<if test="domainContent != null and domainContent != ''">
				<bind name="patternDomainContent" value="'%' + _parameter.domainContent + '%'" />
				AND (tb_domain.domain LIKE #{patternDomainContent})
			</if>
			<if test="queryContent != null and queryContent != ''">
				<bind name="patternQueryContent" value="'%' + _parameter.queryContent + '%'" />
				AND (LOWER(tb_term.term) LIKE LOWER(#{patternQueryContent}))
			</if>
			<if test="dateStart != null and dateStart != ''">
				<!--  AND tb_term.created_date <![CDATA[ >= ]]> TO_TIMESTAMP(#{dateStart}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_term.created_date <![CDATA[ >= ]]> STR_TO_DATE(#{dateStart},'%Y-%m-%d %H:%i:%S')
			</if>
			<if test="dateEnd != null and dateEnd != ''">
				<!--  AND tb_term.created_date <![CDATA[ <= ]]> TO_TIMESTAMP(#{dateEnd}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_term.created_date <![CDATA[ <= ]]> STR_TO_DATE(#{dateEnd},'%Y-%m-%d %H:%i:%S')
			</if>
        </where>
		
    </sql>
    
    <sql id="sqlSelectListConditionApproved2">
        <where>
				<if test="aSelectedRequestId != null">
					tb_term.request_id IN
					<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
        </where>
		
    </sql>
    
    <sql id="sqlSelectListConditionUser">
  		<where>
			tb_term.username = #{username}
			<if test="rejectionReason != null and rejectionReason != ''">
				<bind name="patternRejectionReason" value="'%' + _parameter.rejectionReason + '%'" />
				AND tb_term.rejection_reason LIKE #{patternRejectionReason}
			</if>
			<if test="domainContent != null and domainContent != ''">
				<bind name="patternDomainContent" value="'%' + _parameter.domainContent + '%'" />
				AND (LOWER(tb_domain.domain) LIKE LOWER(#{patternDomainContent}))
			</if>
			<if test="queryContent != null and queryContent != ''">
				<bind name="patternQueryContent" value="'%' + _parameter.queryContent + '%'" />
				AND (LOWER(tb_term.term) LIKE LOWER(#{patternQueryContent}))
			</if>
			<if test="requestStatus != null">
				AND tb_term.request_status IN
				<foreach item="item" collection="requestStatus" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="dateStart != null and dateStart != ''">
				<!--  AND tb_term.created_date <![CDATA[ >= ]]> TO_TIMESTAMP(#{dateStart}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_term.created_date <![CDATA[ >= ]]> STR_TO_DATE(#{dateStart},'%Y-%m-%d %H:%i:%S')
			</if>
			<if test="dateEnd != null and dateEnd != ''">
				<!--  AND tb_term.created_date <![CDATA[ <= ]]> TO_TIMESTAMP(#{dateEnd}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_term.created_date <![CDATA[ <= ]]> STR_TO_DATE(#{dateEnd},'%Y-%m-%d %H:%i:%S')
			</if>
        </where>
    </sql>

    <sql id="sqlSelectListConditionAdmin">
        <where>
			NOT tb_term.request_status in ('1', '5')
			<if test="requester != null and requester != ''">
				AND (LOWER(tb_term.username) = LOWER(#{requester}) OR LOWER(users.firstname) = LOWER(#{requester}))
			</if>
			<if test="rejectionReason != null and rejectionReason != ''">
				<bind name="patternRejectionReason" value="'%' + _parameter.rejectionReason + '%'" />
				AND tb_term.rejection_reason LIKE #{patternRejectionReason}
			</if>
			<if test="domainContent != null and domainContent != ''">
				<bind name="patternDomainContent" value="'%' + _parameter.domainContent + '%'" />
				AND (LOWER(tb_domain.domain) LIKE LOWER(#{patternDomainContent}))
			</if>
			<if test="queryContent != null and queryContent != ''">
				<bind name="patternQueryContent" value="'%' + _parameter.queryContent + '%'" />
				AND (LOWER(tb_term.term) LIKE LOWER(#{patternQueryContent}))
			</if>
			<if test="requestStatus != null">
				AND tb_term.request_status IN
				<foreach item="item" collection="requestStatus" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="dateStart != null and dateStart != ''">
				<!--  AND tb_term.created_date <![CDATA[ >= ]]> TO_TIMESTAMP(#{dateStart}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_term.created_date <![CDATA[ >= ]]> STR_TO_DATE(#{dateStart},'%Y-%m-%d %H:%i:%S')
			</if>
			<if test="dateEnd != null and dateEnd != ''">
				<!--  AND tb_term.created_date <![CDATA[ <= ]]> TO_TIMESTAMP(#{dateEnd}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_term.created_date <![CDATA[ <= ]]> STR_TO_DATE(#{dateEnd},'%Y-%m-%d %H:%i:%S')
			</if>
        </where>
		
    </sql>

    <sql id="sqlSelectListOrderBy">
        ORDER BY
			${orderby} ${ordertype}
		LIMIT #{limit} OFFSET #{offset}
    </sql>

	<sql id="sqlSelectListOrderByApproved2">
       ORDER BY
			tb_term.request_id DESC
    </sql>
    
	<select id="selectCountApproved" parameterType="map" resultType="java.lang.Integer">
   		SELECT COUNT(tb_term.request_id)
		FROM tb_term
		LEFT JOIN tb_domain
			ON
			tb_term.domain_id = tb_domain.request_id
		LEFT JOIN users
			ON
			tb_term.username = users.username
		<include refid="sqlSelectListConditionApproved" />
	</select>
	
	<select id="searchTermCount" parameterType="map" resultType="java.lang.Integer">
   		SELECT COUNT(request_id)
		FROM tb_term
		WHERE
			tb_term.request_status in ('1', '2', '3')
			AND
			term = #{term}
			<if test="requestId != null and requestId != ''">
				AND NOT tb_term.request_id = #{requestId}
			</if>
	</select>
	
	<select id="selectCount" parameterType="map" resultType="java.lang.Integer">
   		SELECT COUNT(tb_term.request_id)
		FROM tb_term
		LEFT JOIN tb_domain
			ON
			tb_term.domain_id = tb_domain.request_id
		<include refid="sqlSelectListConditionUser" />
	</select>

	<select id="selectCountAdmin" parameterType="map" resultType="java.lang.Integer">
   		SELECT COUNT(tb_term.request_id)
		FROM tb_term
		LEFT JOIN tb_domain
			ON
			tb_term.domain_id = tb_domain.request_id
		LEFT JOIN users
			ON
			tb_term.username = users.username
		<include refid="sqlSelectListConditionAdmin" />
	</select>

	<select id="selectListApproved" parameterType="map" resultType="lg.cns.ds.domain.Term">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionApproved" />
		<include refid="sqlSelectListOrderBy" />		
	</select>
	
	<select id="selectListApproved2" parameterType="map" resultType="lg.cns.ds.domain.Term">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionApproved2" />
		<include refid="sqlSelectListOrderByApproved2" />		
	</select>
	
	<select id="selectList" parameterType="map" resultType="lg.cns.ds.domain.Term">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionUser" />
		<include refid="sqlSelectListOrderBy" />
	</select>

	<select id="selectListAdmin" parameterType="map" resultType="lg.cns.ds.domain.Term">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionAdmin" />
		<include refid="sqlSelectListOrderBy" />		
	</select>

	<insert id="insert" parameterType="lg.cns.ds.domain.Term" useGeneratedKeys="true" keyProperty="requestId" keyColumn="request_id">
		INSERT INTO tb_term (
			request_type
			, request_status
			, regist_status
			, is_normal
			, username
			, created_date
			, approved_date
			, term
			, domain_id
			, word_decomposition_kor
			, word_decomposition_eng
			, definition
			)
		VALUES (
			#{requestType},
			#{requestStatus},
			#{registStatus},
			#{isNormal},
			#{username},
			now(),
			null,
			#{term},
			#{domainId},
			#{wordDecompositionKor},
			#{wordDecompositionEng},
			#{definition}
		)
	</insert>


	<update id="update" parameterType="lg.cns.ds.domain.Term">
		UPDATE tb_term SET
			term = #{term}
			, domain_id = #{domainId}
			, word_decomposition_kor = #{wordDecompositionKor}
			, word_decomposition_eng = #{wordDecompositionEng}
			, definition = #{definition}
			, is_normal = #{isNormal}
			, regist_status = CASE WHEN request_status = '4' THEN '2' ELSE '1' END
		WHERE
			request_id = #{requestId}
			AND
			username = #{username}
	</update>
	
	<update id="updateRejectionReason" parameterType="lg.cns.ds.domain.Term">
		UPDATE tb_term SET
			rejection_reason = #{rejectionReason}
		WHERE
			request_id = #{requestId}
			AND
			request_status in ('4', '2')
	</update>
	
	<select id="findDomain" parameterType="java.util.HashMap" resultType="lg.cns.ds.domain.Domain">
		SELECT
			Domain.request_id as requestId,
			Domain.domain as domain,
			Domain.type as type,
			grp4.name as typeText,
			Domain.data_type as dataType,
			grp5.name as dataTypeText,
			Domain.data_length as dataLength
		FROM tb_domain as Domain
		LEFT JOIN tb_common_dict AS grp4
			ON
			Domain.type = grp4.grp_code AND grp4.grp_id = '4'
		LEFT JOIN tb_common_dict AS grp5
			ON
			Domain.data_type = grp5.grp_code AND grp5.grp_id = '5'
		WHERE
			Domain.request_status IN ('3')
			<bind name="patternQueryContent" value="'%' + _parameter.word + '%'" />
			AND (Domain.domain LIKE #{patternQueryContent})
		ORDER BY Domain.domain
	</select>
	
	<update id="makeRequest" parameterType="java.util.HashMap">
		UPDATE tb_term SET
			request_status = '2',
			created_date = now()
		WHERE 
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			username = #{username}
			AND
			request_status in ('1', '4')
	</update>
	<update id="cancelRequest" parameterType="java.util.HashMap">
		UPDATE tb_term SET
			request_status = '5'
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			username = #{username}
			AND
			(request_status in ('1', '2', '4') OR request_status IS NULL)
	</update>

	<delete id="deleteRequest" parameterType="java.util.HashMap">	
		DELETE FROM tb_term
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				${item}
			</foreach>	
			AND
			username = #{username}
			AND
			(request_status in ('1', '2', '4') OR request_status IS NULL)
	</delete>

	<update id="approveRequest" parameterType="java.util.HashMap">		
		UPDATE tb_term SET
			request_status = '3'
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			request_status = '2'
	</update>

	<update id="rejectRequest" parameterType="java.util.HashMap">		
		UPDATE tb_term SET
			request_status = '4'
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			request_status = '2'
	</update>
</mapper>