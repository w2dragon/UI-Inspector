<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lg.cns.ds.mapper.domainMapper">
	<sql id = "sqlSelectList">
		SELECT
			request_id as requestId
			, request_type as requestType
			, request_status as requestStatus
			, grp1.name as requestStatusText
			, regist_status as registStatus
			, grp3.name as registStatusText
			, is_normal as isNormal
			, grp2.name as isNormalText
			, tb_domain.username as username
			, users.firstname as firstname
			, created_date as createdDate
			, domain as domain
			, type as type
			, grp4.name as typeText
			, word_union_kor as wordUnionKor
			, word_union_eng as wordUnionEng
			, data_type as dataType
			, grp5.name as dataTypeText
			, data_length as dataLength
			, definition as definition
			, word1_id as word1Id
			, word2_id as word2Id
			, tb_domain.rejection_reason as rejectionReason
		FROM tb_domain
		LEFT JOIN tb_common_dict AS grp1
			ON
			request_status = grp1.grp_code AND grp1.grp_id = '1'
		LEFT JOIN tb_common_dict AS grp2
			ON
			is_normal = grp2.grp_code AND grp2.grp_id = '2'
		LEFT JOIN tb_common_dict AS grp3
			ON
			regist_status = grp3.grp_code AND grp3.grp_id = '3'
		LEFT JOIN tb_common_dict AS grp4
			ON
			type = grp4.grp_code AND grp4.grp_id = '4'
		LEFT JOIN tb_common_dict AS grp5
			ON
			data_type = grp5.grp_code AND grp5.grp_id = '5'
		LEFT JOIN users
			ON
			tb_domain.username = users.username
	</sql>
	
	<sql id="sqlSelectListConditionApproved">
		<where>
			tb_domain.request_status in ('3')
			<if test="requester != null and requester != ''">
				AND (LOWER(tb_domain.username) = LOWER(#{requester}) OR LOWER(users.firstname) = LOWER(#{requester}))
			</if>
			<if test="queryContent != null and queryContent != ''">
				<bind name="patternQueryContent" value="'%' + _parameter.queryContent + '%'" />
				AND (LOWER(tb_domain.domain) LIKE LOWER(#{patternQueryContent}))
			</if>
			<if test="dateStart != null and dateStart != ''">
				<!--  AND tb_domain.created_date <![CDATA[ >= ]]> TO_TIMESTAMP(#{dateStart}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_domain.created_date <![CDATA[ >= ]]> STR_TO_DATE(#{dateStart},'%Y-%m-%d %H:%i:%S')

			</if>
			<if test="dateEnd != null and dateEnd != ''">
				<!-- AND tb_domain.created_date <![CDATA[ <= ]]> TO_TIMESTAMP(#{dateEnd}, 'YYYY-MM-DD HH24:MI:SS')  -->
				AND tb_domain.created_date <![CDATA[ <= ]]> STR_TO_DATE(#{dateEnd},'%Y-%m-%d %H:%i:%S')
			</if>
        </where>
	</sql>
	
	<sql id="sqlSelectListConditionApproved2">
		<where>
			<if test="aSelectedRequestId != null">
				tb_domain.request_id IN
				<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
        </where>
	</sql>
	
	<sql id="sqlSelectListConditionUser">
		<where>
			tb_domain.username = #{username}
			<if test="rejectionReason != null and rejectionReason != ''">
				<bind name="patternRejectionReason" value="'%' + _parameter.rejectionReason + '%'" />
				AND tb_domain.rejection_reason LIKE #{patternRejectionReason}
			</if>
			<if test="queryContent != null and queryContent != ''">
				<bind name="patternQueryContent" value="'%' + _parameter.queryContent + '%'" />
				AND (LOWER(tb_domain.domain) LIKE LOWER(#{patternQueryContent}))
			</if>
			<if test="requestStatus != null">
				AND tb_domain.request_status IN
				<foreach item="item" collection="requestStatus" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="dateStart != null and dateStart != ''">
				<!--  AND tb_domain.created_date <![CDATA[ >= ]]> TO_TIMESTAMP(#{dateStart}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_domain.created_date <![CDATA[ >= ]]> STR_TO_DATE(#{dateStart},'%Y-%m-%d %H:%i:%S')
			</if>
			<if test="dateEnd != null and dateEnd != ''">
				<!--  AND tb_domain.created_date <![CDATA[ <= ]]> TO_TIMESTAMP(#{dateEnd}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_domain.created_date <![CDATA[ <= ]]> STR_TO_DATE(#{dateEnd},'%Y-%m-%d %H:%i:%S')
			</if>
        </where>
	</sql>
	
	<sql id="sqlSelectListConditionAdmin">
		<where>
			NOT tb_domain.request_status in ('1', '5')
			<if test="requester != null and requester != ''">
				AND (LOWER(tb_domain.username) = LOWER(#{requester}) OR LOWER(users.firstname) = LOWER(#{requester}))
			</if>
			<if test="rejectionReason != null and rejectionReason != ''">
				<bind name="patternRejectionReason" value="'%' + _parameter.rejectionReason + '%'" />
				AND tb_domain.rejection_reason LIKE #{patternRejectionReason}
			</if>
			<if test="queryContent != null and queryContent != ''">
				<bind name="patternQueryContent" value="'%' + _parameter.queryContent + '%'" />
				AND (LOWER(tb_domain.domain) LIKE LOWER(#{patternQueryContent}))
			</if>
			<if test="requestStatus != null">
				AND tb_domain.request_status IN
				<foreach item="item" collection="requestStatus" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="dateStart != null and dateStart != ''">
				<!-- AND tb_domain.created_date <![CDATA[ >= ]]> TO_TIMESTAMP(#{dateStart}, 'YYYY-MM-DD HH24:MI:SS')  -->
				AND tb_domain.created_date <![CDATA[ >= ]]> STR_TO_DATE(#{dateStart},'%Y-%m-%d %H:%i:%S')
			</if>
			<if test="dateEnd != null and dateEnd != ''">
				<!--  AND tb_domain.created_date <![CDATA[ <= ]]> TO_TIMESTAMP(#{dateEnd}, 'YYYY-MM-DD HH24:MI:SS') -->
				AND tb_domain.created_date <![CDATA[ <= ]]> STR_TO_DATE(#{dateEnd},'%Y-%m-%d %H:%i:%S')
			</if>
        </where>
	</sql>
	
	<sql id="sqlSelectListOrderBy">
		ORDER BY
			${orderby} ${ordertype}
		LIMIT #{limit} OFFSET #{offset}
	</sql>
	
	<sql id="sqlSelectListOrderByApproved2">
        ORDER BY
			tb_domain.request_id DESC
    </sql>
    
	<select id="selectCountApproved" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(request_id)
		FROM tb_domain
		LEFT JOIN users
			ON
			tb_domain.username = users.username
		<include refid="sqlSelectListConditionApproved" />
	</select>
	<select id="searchDomainCount" parameterType="map" resultType="java.lang.Integer">
   		SELECT COUNT(request_id)
		FROM tb_domain
		WHERE
			tb_domain.request_status in ('1', '2', '3')
			AND
			domain = #{domain}
			<if test="requestId != null and requestId != ''">
				AND NOT tb_domain.request_id = #{requestId}
			</if>
	</select>
	<select id="selectCount" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(request_id)
		FROM tb_domain
		<include refid="sqlSelectListConditionUser" />
	</select>
	
	<select id="selectCountAdmin" parameterType="map" resultType="java.lang.Integer">
   		SELECT COUNT(request_id)
		FROM tb_domain
		LEFT JOIN users
			ON
			tb_domain.username = users.username
		<include refid="sqlSelectListConditionAdmin" />
	</select>
	
	<select id="selectListApproved" parameterType="map" resultType="lg.cns.ds.domain.Domain">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionApproved" />
		<include refid="sqlSelectListOrderBy" />
	</select>
	
	<select id="selectListApproved2" parameterType="map" resultType="lg.cns.ds.domain.Domain">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionApproved2" />
		<include refid="sqlSelectListOrderByApproved2" />
	</select>
	
	<select id="selectList" parameterType="map" resultType="lg.cns.ds.domain.Domain">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionUser" />
		<include refid="sqlSelectListOrderBy" />
	</select>
	
	<select id="selectListAdmin" parameterType="map" resultType="lg.cns.ds.domain.Domain">
		<include refid="sqlSelectList" />
		<include refid="sqlSelectListConditionAdmin" />
		<include refid="sqlSelectListOrderBy" />
	</select>
	
	<insert id="insert" parameterType="lg.cns.ds.domain.Domain" useGeneratedKeys="true" keyProperty="requestId" keyColumn="request_id">
		INSERT INTO tb_domain
			(
				request_type,
				request_status,
				regist_status,
				is_normal,
				username,
				created_date,
				approved_date,
				domain,
				type,
				word_union_kor,
				word_union_eng,
				data_type,
				data_length,
				definition,
				word1_id,
				word2_id
			)
		VALUES
			(
				#{requestType},
				#{requestStatus},
				#{registStatus},
				#{isNormal},
				#{username},
				now(),
				null,
				#{domain},
				#{type},
				#{wordUnionKor},
				#{wordUnionEng},
				#{dataType},
				#{dataLength},
				#{definition},
				#{word1Id},
				#{word2Id}
			)
	</insert>
	
	<update id="update" parameterType="lg.cns.ds.domain.Domain">
		UPDATE tb_domain SET
			domain = #{domain}
			, type = #{type}
			, word_union_kor = #{wordUnionKor}
			, word_union_eng = #{wordUnionEng}
			, data_type = #{dataType}
			, data_length = #{dataLength}
			, definition = #{definition}
			, is_normal = #{isNormal}
			, word1_id = #{word1Id}
			, word2_id = #{word2Id}
			, regist_status = CASE WHEN request_status = '4' THEN '2' ELSE '1' END
		WHERE
			request_id = #{requestId}
			AND
			username = #{username}
	</update>
	
	<update id="updateRejectionReason" parameterType="lg.cns.ds.domain.Domain">
		UPDATE tb_domain SET
			rejection_reason = #{rejectionReason}
		WHERE
			request_id = #{requestId}
			AND
			request_status in ('4', '2')
	</update>

	<update id="makeRequest" parameterType="java.util.HashMap">
		UPDATE tb_domain SET
			request_status = '2',
			created_date = now()
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			username = #{username}
			AND
			request_status in ('1', '4')
	</update>

	<update id="cancelRequest" parameterType="java.util.HashMap">
		UPDATE tb_domain SET
			request_status = '5'
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			username = #{username}
			AND
			(request_status in ('1', '2', '4') OR request_status IS NULL)
	</update>
	
	<update id="approveRequest" parameterType="java.util.HashMap">		
		UPDATE tb_domain SET
			request_status = '3'
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			request_status = '2'
	</update>
	
	<update id="rejectRequest" parameterType="java.util.HashMap">		
		UPDATE tb_domain SET
			request_status = '4'
		WHERE
			request_id IN
			<foreach item="item" collection="aSelectedRequestId" open="(" separator="," close=")">
				#{item}
			</foreach>
			AND
			request_status = '2'
	</update>
</mapper>